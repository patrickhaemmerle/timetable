# Generated by Django 2.2.1 on 2019-05-08 17:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('agency_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('agency_name', models.CharField(max_length=100)),
                ('agency_url', models.CharField(max_length=250)),
                ('agency_timezone', models.CharField(max_length=50)),
                ('agency_lang', models.CharField(blank=True, max_length=50, null=True)),
                ('agency_phone', models.CharField(blank=True, max_length=50, null=True)),
                ('agency_fare_url', models.CharField(blank=True, max_length=250, null=True)),
                ('agency_email', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'Agencies',
            },
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('service_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('monday', models.IntegerField(choices=[(0, 'Available'), (1, 'Not available')])),
                ('tuesday', models.IntegerField(choices=[(0, 'Available'), (1, 'Not available')])),
                ('wednesday', models.IntegerField(choices=[(0, 'Available'), (1, 'Not available')])),
                ('thursday', models.IntegerField(choices=[(0, 'Available'), (1, 'Not available')])),
                ('friday', models.IntegerField(choices=[(0, 'Available'), (1, 'Not available')])),
                ('saturday', models.IntegerField(choices=[(0, 'Available'), (1, 'Not available')])),
                ('sunday', models.IntegerField(choices=[(0, 'Available'), (1, 'Not available')])),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='CalendarDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_id', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('exception_type', models.IntegerField(choices=[(1, 'Added'), (2, 'Removed')])),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('route_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('route_short_name', models.CharField(blank=True, max_length=10, null=True)),
                ('route_long_name', models.CharField(blank=True, max_length=50, null=True)),
                ('route_desc', models.CharField(blank=True, max_length=250, null=True)),
                ('route_type', models.IntegerField()),
                ('route_url', models.CharField(blank=True, max_length=250, null=True)),
                ('route_color', models.CharField(blank=True, max_length=10, null=True)),
                ('route_text_color', models.CharField(blank=True, max_length=10, null=True)),
                ('route_sort_order', models.IntegerField(null=True)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='routes', to='gtfs.Agency')),
            ],
        ),
        migrations.CreateModel(
            name='Stop',
            fields=[
                ('stop_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('stop_code', models.CharField(blank=True, max_length=50, null=True)),
                ('stop_name', models.CharField(blank=True, max_length=50, null=True)),
                ('stop_desc', models.CharField(blank=True, max_length=250, null=True)),
                ('stop_lat', models.FloatField(null=True)),
                ('stop_lon', models.FloatField(null=True)),
                ('stop_url', models.CharField(blank=True, max_length=250, null=True)),
                ('location_type', models.IntegerField(choices=[(0, 'Stop or Platform'), (1, 'Station'), (2, 'Station Entrance/Exit'), (3, 'Generic'), (4, 'Boarding Area')], default=0)),
                ('stop_timezone', models.CharField(blank=True, max_length=50, null=True)),
                ('wheelchair_boarding', models.IntegerField(choices=[(0, '0'), (1, '1'), (2, '2')], default=0)),
                ('platform_code', models.CharField(blank=True, max_length=10, null=True)),
                ('parent_station', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='gtfs.Stop')),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('trip_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('service_id', models.CharField(max_length=100)),
                ('trip_headsign', models.CharField(blank=True, max_length=100, null=True)),
                ('trip_short_name', models.CharField(blank=True, max_length=100, null=True)),
                ('direction_id', models.IntegerField(choices=[(0, '0'), (1, '1')], null=True)),
                ('block_id', models.CharField(blank=True, max_length=100, null=True)),
                ('wheelchair_accessible', models.CharField(blank=True, choices=[(0, 'No information'), (1, 'Yes'), (2, 'No')], max_length=1, null=True)),
                ('bikes_allowed', models.CharField(blank=True, choices=[(0, 'No information'), (1, 'Yes'), (2, 'No')], max_length=1, null=True)),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gtfs.Route')),
            ],
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transfer_type', models.IntegerField()),
                ('min_transfer_time', models.IntegerField()),
                ('from_stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers', to='gtfs.Stop')),
                ('to_stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gtfs.Stop')),
            ],
        ),
        migrations.CreateModel(
            name='StopTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stop_sequence', models.IntegerField()),
                ('stop_headsign', models.CharField(blank=True, max_length=100, null=True)),
                ('arrival_time', models.CharField(blank=True, max_length=8, null=True)),
                ('departure_time', models.CharField(blank=True, max_length=8, null=True)),
                ('pickup_type', models.CharField(blank=True, choices=[('0', 'Regularly scheduled pickup'), ('1', 'No pickup available'), ('2', 'Must phone agency to arrange pickup'), ('3', 'Must coordinate with driver to arrange pickup')], max_length=1, null=True)),
                ('drop_off_type', models.CharField(blank=True, choices=[('0', 'Regularly scheduled drop off'), ('1', 'No dropoff available'), ('2', 'Must phone agency to arrange dropoff'), ('3', 'Must coordinate with driver to arrange dropoff')], max_length=1, null=True)),
                ('shape_dist_traveled', models.FloatField(null=True)),
                ('timepoint', models.CharField(blank=True, choices=[('0', '0'), ('1', '1')], max_length=1, null=True)),
                ('stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stop_times', to='gtfs.Stop')),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stop_times', to='gtfs.Trip')),
            ],
        ),
    ]
